#include <gpiod.h>
#include <stdio.h>
#include <time.h>
#include <pthread.h>

#define IN1_CHIP "gpiochip0"
#define IN1_LINE 24
#define IN2_CHIP "gpiochip0"
#define IN2_LINE 23
#define EN_CHIP "gpiochip0"
#define EN_LINE 25

// Function prototypes
void startMotor(struct gpiod_line *in1, struct gpiod_line *in2);
void setSpeed(int speed, struct gpiod_line *en);
void stopMotor(struct gpiod_line *in1, struct gpiod_line *in2, struct gpiod_line *en);
void *setSpeedThread(void *arg);

int main(void) {
    // ... (rest of the code remains unchanged)
}

// Function definitions

void startMotor(struct gpiod_line *in1, struct gpiod_line *in2) {
    gpiod_line_set_value(in1, 1);
    gpiod_line_set_value(in2, 0);
    printf("Forward\n");
}

void setSpeed(int speed, struct gpiod_line *en) {
    // Threaded PWM implementation for speed control
    pthread_t thread;
    pthread_create(&thread, NULL, setSpeedThread, &speed);
}

void stopMotor(struct gpiod_line *in1, struct gpiod_line *in2, struct gpiod_line *en) {
    gpiod_line_set_value(in1, 0);
    gpiod_line_set_value(in2, 0);
    gpiod_line_set_value(en, 0);
    printf("Motor stopped\n");
}

// Thread function for PWM generation
void *setSpeedThread(void *arg) {
    int *speed = (int *)arg;
    // ... (same PWM logic as before)
    return NULL;
}
