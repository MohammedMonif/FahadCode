#include <stdio.h>
#include <gpiod.h>

#define IN1_PIN 17
#define IN2_PIN 18
#define EN_PIN 27

struct gpiod_chip *chip;
struct gpiod_line_bulk lines;

void startMotor(int direction);
void setSpeed(int speed);
void stopMotor();

int main(void) {
    chip = gpiod_chip_open("/dev/gpiochip0");
    if (!chip) {
        perror("Error opening GPIO chip");
        return 1;
    }

    if (gpiod_chip_get_lines(chip, &lines, IN1_PIN, IN2_PIN, EN_PIN, -1) < 0) {
        perror("Error getting GPIO lines");
        gpiod_chip_close(chip);
        return 1;
    }

    gpiod_chip_claim_bulk_output(&lines, "Motor Control", 0);

    printf("The default speed of the motor is LOW & Forward.....\n");
    printf("r-run l-low h-high e-exit\n");

    while (1) {
        char x;
        scanf(" %c", &x);

        if (x == 'r') {
            startMotor(1);
        } else if (x == 'l') {
            setSpeed(25);
        } else if (x == 'h') {
            setSpeed(75);
        } else if (x == 'e') {
            stopMotor();
            printf("GPIO Clean up\n");
            gpiod_chip_close(chip);
            return 0;
        } else {
            printf("<<< wrong data >>>\n");
            printf("please enter the defined data to continue.....\n");
        }
    }

    gpiod_chip_close(chip);
    return 0;
}

void startMotor(int direction) {
    if (direction == 1) {
        gpiod_line_set_value_bulk(&lines, 1, 0, 0);
        printf("Forward\n");
    }
}

void setSpeed(int speed) {
    // Implementation of setting speed using libgpiod
    printf("Speed set to %d%%\n", speed);
}

void stopMotor() {
    gpiod_line_set_value_bulk(&lines, 0, 0, 0);
    printf("Motor stopped\n");
}
